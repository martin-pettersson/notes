name: Continuous Integration/Deployment
on:
  push:
    branches:
      - 'release/*'
    tags:
      - '*'
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    branches:
      - master
jobs:
  install:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/${{ github.repository }}/build:1.0
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/cache-install
  build:
    needs: install
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/${{ github.repository }}/build:1.0
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - run: |
        whoami
        echo "${UID}"
        id
      - uses: ./.github/actions/cache-build
  test:
    needs: build
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/${{ github.repository }}/build:1.0
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/cache-test
      - if: ${{ always() }}
        run: npm coverage
      - uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage
  cover:
    needs: test
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: coverage
      - uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: cobertura-coverage.xml
          fail_below_min: true
          thresholds: '75 90'
          format: markdown
          output: both
          badge: true
      - id: find-pull-request
        uses: jwalton/gh-find-current-pr@v1
      - uses: marocchino/sticky-pull-request-comment@v2
        if: ${{ steps.find-pull-request.outputs.number }}
        with:
          number: ${{ steps.find-pull-request.outputs.number }}
          recreate: true
          path: code-coverage-reults.md

  build-image:
    needs: cover
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: echo VERSION=$(echo "${GITHUB_REF}" | cut -d "/" -f 3- | sed -e "s/\//-/g") >> "${GITHUB_ENV}"
      - run: docker build --tag notes:${{ env.VERSION }} --build-arg version=${{ env.VERSION }} .
      - run: docker save --output notes.tar notes:${{ env.VERSION }}
      - uses: actions/upload-artifact@v2
        with:
          name: Docker Image
          path: notes.tar
  test-integration:
    needs: build-image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v1
        with:
          node-version: 18
      - uses: ./.github/actions/cache-install
      - uses: actions/download-artifact@v2
        with:
          name: Docker Image
      - run: |
          IMAGE_NAME=$(docker load --input notes.tar)
          echo VERSION=$(echo "${IMAGE_NAME}" | cut -d ":" -f 3-) >> "${GITHUB_ENV}"
      - run: docker run --rm -d -e NODE_ENV=test -p 3000:3000 --name notes notes:${{ env.VERSION }}
      - uses: angela-mylo/wait-for-response@1.0.2
        with:
          url: http://localhost:3000/health
          responseCode: 204
          timeout: 5000
          interval: 500
      - run: npm run test:integration --workspace api
      - run: docker kill notes
